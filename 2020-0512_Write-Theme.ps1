
    [Environment]::GetEnvironmentVariables().GetEnumerator() | Sort Name 

Function Write-Theme
{ 
    [ CmdLetBinding ( <# DefaultParameterSetName = "" #> ) ] Param (

        #[ Parameter ( Mandatory, Position=0, ValueFromPipeline=$True, ParameterSetName=     "XML" )][String]       $XML ,
        [ Parameter ( Mandatory, Position=0, ValueFromPipeline=$True, ParameterSetName= "Function" )][String]  $Function ,
        [ Parameter ( Mandatory, Position=0, ValueFromPipeline=$True, ParameterSetName=   "Action" )][String]    $Action ,
        [ Parameter ( Mandatory, Position=0, ValueFromPipeline=$True, ParameterSetName=  "Section" )][String]   $Section ,
        [ Parameter ( Mandatory, Position=0, ValueFromPipeline=$True, ParameterSetName=    "Table" )][String]     $Table )
        #[ Parameter ( Mandatory, Position=1, ValueFromPipeline=$True, ParameterSetName=   "Action" )]
        #[ Parameter ( Mandatory, Position=1, ValueFromPipeline=$True, ParameterSetName= "Function" )][String]      $Slot ,
        #[ Parameter (            Position=2, ValueFromPipeline=$True, ParameterSetName=   "Action" )]
        #[ Parameter (            Position=2, ValueFromPipeline=$True, ParameterSetName= "Function" )][String]      $Info ,
        #[ Parameter ( Mandatory, Position=1, ValueFromPipeline=$True, ParameterSetName=  "Section" )]
        #[ Parameter ( Mandatory, Position=1, ValueFromPipeline=$True, ParameterSetName=    "Table" )][String]     $Title ,
        #[ Parameter ( Mandatory, Position=2, ValueFromPipeline=$True, ParameterSetName=  "Section" )]
        #[ Parameter ( Mandatory, Position=2, ValueFromPipeline=$True, ParameterSetName=    "Table" )][String]    $Prompt ,
        #[ Parameter ( Mandatory, Position=3, ValueFromPipeline=$True, ParameterSetName=    "Color" )][HashTable] $Colors )

        # ____________________________________________________________________________________________________________________________________________________________  
        # [Function] ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ | 
        # ##### |   1|   2|   3|   4|   5|   6|   7|   8|   9|  10|  11|  12|  13|  14|  15|  16|  17|  18|  19|  20|  21|  22|  23|  24|  25|  26|  27|  28|  29|  30| 
        
        #   0 : |    |____|    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |____|    |____|    |____|    |____|    |____|    | 
        #   1 : |   /|/¯¯\|\___|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|___/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\   | 
        #   2 : |   \|\__/|/¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/   | 
        #   3 : |    |¯¯¯\|\__[| Pre|ss E|nter| to |Cont|inue| ]__|____|____|____|____|____|____|____|____|____|___/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/¯¯¯|    | 
        #   4 : |    |    |¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|    |¯¯¯¯|    |¯¯¯¯|    |¯¯¯¯|    |¯¯¯¯|    |    | 

        # ____________________________________________________________________________________________________________________________________________________________  
        # [Action] ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ | 
        # ##### |   1|   2|   3|   4|   5|   6|   7|   8|   9|  10|  11|  12|  13|  14|  15|  16|  17|  18|  19|  20|  21|  22|  23|  24|  25|  26|  27|  28|  29|  30| 

        #   0 : |    |____|    |____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|    |    | 
        #   1 : |   /|/¯¯\|\__/|/¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯\|\___|    | 
        #   2 : |   \|\__/|/¯¯¯|    |    |    |    |  St|uff |: Ha|ppen|ing |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |___/|/¯¯\|\   | 
        #   3 : |    |¯¯¯\|\___|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|___/|/¯¯\|\__/|/   | 
        #   4 : |    |    |¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|    |¯¯¯¯|    | 

        #_____________________________________________________________________________________________________________________________________________________________  
        # [Section] ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ | 
        # ##### |   1|   2|   3|   4|   5|   6|   7|   8|   9|  10|  11|  12|  13|  14|  15|  16|  17|  18|  19|  20|  21|  22|  23|  24|  25|  26|  27|  28|  29|  30| 

        #   0 : |    |____|    |____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|    |    | 
        #   1 : |   /|/¯¯\|\__/|/¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯\|\___|    | 
        #   2 : |   \|\__/|/¯¯¯|    |    |    |    |  St|uff |: Ha|ppen|ing |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |___/|/¯¯\|\   | [ Header ]
        #   3 : |   /|/¯¯\|\___|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|___/|/¯¯\|\__/|/   | {Available to Array and Hashtable}

        #   $Test   = [Ordered]@{ 
        #       
        #       Example1 = [Ordered]@{ Item1_1 = "Value1_1"; Item1_2 = "Value1_2"; Item1_3 = "Value1_3" }
        #       Example2 = [Ordered]@{ Item2_1 = "Value2_1"; Item2_2 = "Value2_2"; Item2_3 = "Value2_3" }
        #       Example3 = [Ordered]@{ Item3_1 = "Value3_1"; Item3_2 = "Value3_2"; Item3_3 = "Value3_3" }
        #}

        #   0 : |   \|\__/|/¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯\|\__/|/¯¯\|\   | [ Section 1 ]
        #   1 : |   /|/¯¯\|\__[|Cont|ent |]___|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|___/|/¯¯\|\__/|/   | [ Name of Section 1 ]
        #   2 : |   \|\__/|/¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯\|\__/|/¯¯\|\   | 
        #   3 : |   /|/¯¯\|\   |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |   /|¯¯¯\|\__/|/   | 


        #   0 : |   \|\__/|/   |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |   \|\__/|/¯¯\|\   | 
        #   1 : |   /|/¯¯\|\   |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |   /|/¯¯\|\__/|/   |

        #   0 : |   /|/¯¯\|\___|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|___/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\   | 
        #   1 : |   \|\__/|/¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/   | 
        #   2 : |    |¯¯¯\|\__[| Pre|ss E|nter| to |Cont|inue| ]__|____|____|____|____|____|____|____|____|____|___/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/¯¯¯|    | [ Prompt ]
        #   3 : |    |    |¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|    |¯¯¯¯|    |¯¯¯¯|    |¯¯¯¯|    |¯¯¯¯|    |    | 

        # ____________________________________________________________________________________________________________________________________________________________  
        #       |   1|   2|   3|   4|   5|   6|   7|   8|   9|  10|  11|  12|  13|  14|  15|  16|  17|  18|  19|  20|  21|  22|  23|  24|  25|  26|  27|  28|  29|  30| 
        
        #   0 : |    |____|    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |____|    |____|    |____|    |____|    |____|    | 
        #   1 : |   /|/¯¯\|\___|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|___/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\   | 
        #   2 : |   \|\__/|/¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/   | 
        #   3 : |    |¯¯¯\|\__[| Pre|ss E|nter| to |Cont|inue| ]__|____|____|____|____|____|____|____|____|____|___/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/¯¯¯|    | 
        #   4 : |    |    |¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|    |¯¯¯¯|    |¯¯¯¯|    |¯¯¯¯|    |¯¯¯¯|    |    | 

        $Sample  =  "    ____    ____________________________________________________________________________________________________        " , 
                    "   //¯¯\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\___    " , 
                    "   \\__//¯¯¯                    Stuff : Happening ________________________________________________________  ___//¯¯\\   " , 
                    "    ¯¯¯\\__________________________________________________________________________________________________//¯¯\\__//   " , 
                    "        ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯    ¯¯¯¯    "


                    "                         ",<#25#>," : ","                                                                  ",<#66#>
                    "                         ",<#25#>," : ","                                                                  ",<#66#>
                    "___________________ Stuff"," : ","Happening ________________________________________________________"

        $Sample  =  "    ____                                                                        ____    ____    ____    ____    ____    " , 
                    "   //¯¯\\______________________________________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\   " , 
                    "   \\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//   " , 
                    "    ¯¯¯\\__[________________________________________________________________]__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯¯    " , 
                    "        ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯        "

    While ( [Console]::WindowWidth -lt 127 ) { [Console]::WindowWidth ++ }

    Class Range
    {
        [Int32[]] $Range

        Range([Int32]$Total) 
        { 
            If ( $Total -gt 1 ) 
            { 
                $This.Range = [Int32[]]@( 0..( $Total - 1 ) )
            }
            
            Else 
            { 
                Throw "Not a range" 
            }
        }
    }

    Class Charm
    {
         [Int32]  $Index
          [Char]  $Char
        [String]  $Name
        [String]  $Decimal
        [String]  $Dec
        [String]  $Hexidecimal
        [String]  $Hex

        Charm([Int32]$Index)
        {
            $This.Index        = [Int32] $Index
            $This.Char         = [Char]  $Index
            $This.Name         = @{
            
                $True          = @{ 
                
                    32         = "nbsp"
                    34         = "quot"
                    38         = "amp"
                    39         = "apos"
                    42         = "star"
                    60         = "lt"
                    62         = "gt"

                }[$Index]      | % { "&{0};" -f $_ }

                $False         = "" 
                
            }[$Index -in 32,34,38,39,42,60,62]
            
            $This.Decimal      = $Index
            $This.Dec          = [String](  "&#{0:d};" -f $Index )
            $This.Hexidecimal  = [String](    "{0:X}"  -f $Index )
            $This.Hex          = [String]( "&#x{0:X};" -f $Index )
        }
    }

    Class Block
    {
        static [String[]] $Full = "    ","____","¯¯¯¯","----","   /","\   ","   \","/   ","\__/","/¯¯\","/¯¯¯","¯¯¯\","\___","___/"
    }

    Class Stock
    {
        [String[]] $Margin
        [String[]] $Face
        [String[]] $Fill

        Stock([Int32]$Index)
        {
            $This.Margin = [Block]::Full[@{ 0 =  4,  5 ; 1 =  6,  7 }[ $Index % 2 ] ]
            $This.Face   = [Block]::Full[@{ 0 =  8,  9 ; 1 =  9,  8 }[ $Index % 2 ] ]
            $This.Fill   = [Block]::Full[@{ 0 = 10, 11 ; 1 = 12, 13 }[ $Index % 2 ] ]
        }
    }

    Class Track
    {
        [Int32]    $Index
        [String]   $Track
        [String[]] $Face
        [String[]] $Items
        [Int32[]]  $Guide
        [String[]] $String
        [String[]] $Fill
        [String]   $Serial
        [String]   $Mask

        Track([Int32]$Index,[String]$Track)
        {
            If ( $Track.Length -lt 120 ) { Throw "Does not meet minimum length" }

            $This.Index    = $Index
            $This.Track    = $Track
            $This.Face     = 0..( $Track.Length - 1 ) | ? { $_ % 4 -eq 0 } | % { $Track.Substring( $_ , 4 ) }
            $This.Items    = $This.Face | ? { $_ -in [Block]::Full } | Select -Unique
            $This.Guide    = 0..( $This.Face.Count - 1 ) | ? { $This.Face[$_] -in $This.Items } | % { $I = $_ ; 0..( $This.Items.Count - 1 ) | ? { $This.Items[$_] -eq $This.Face[$I] } }
            $This.String   = $This.Serial = $This.Guide -join ';'
            $This.Fill     = ( [Regex]"([\d])+([;]\1){2,}" ).Matches( $This.String ).Value

            If ( $This.Fill.Count -gt 1 )
            {
                ForEach ( $I in 0..( $This.Fill.Count - 1 ) )
                {
                    $This.String = $This.Fill[$I] | % { $This.String.Replace( $_ , ( "@({0})*{1}" -f ( $_.Split(";")[0] , $_.Split(";").Count ) ) ) }
                }
            }

            Else
            {
                $This.String = $This.Fill | % { 
                
                    $This.String.Replace( $_ , ( "@({0})*{1}" -f ( $_.Split(";")[0] , $_.Split(";").Count ) ) ) }
            }

            $This.Mask     = ( $This.Serial.Split(';') | % { "{$_}" } ) -join ""

        }
    }

        # $Stack = 0..4 | % { [Track]::New($_,$Sample[$_]) }
                
            If ( $This.Mask.Split(" ").Count -ge 1 )
            {
                $This.String = ForEach ( $I in $This.Mask.Split(" ") ) 
                { 
                    "@({0})*{1}" -f $I.Split(",")[0] , $I.Split(",").Count 
                }
                
                ForEach ( $I in 0..( $This.String.Count - 1 ) ) 
                { 
                    $This.Serial = "@({0})" -f ( $This.Serial -Replace ( ",{0}," -f $This.Mask ) , ( ";{0};" -f $This.String[$I] ) )
                }
            }

            Else
            {
                $This.String = "@(" , $This.Mask.Split(",")[0] , ")*" , $This.Mask.Split(",").Count -join ''
                $This.Serial = "@({0})" -f ( $This.Serial -Replace ( ",{0}," -f $This.Mask ) , ( ";{0};" -f $This.String ) )
            }
        }
    }

    # $Stack = 0..4 | % { [Track]::New($_,$Sample[$_]) }

    Class Header
    {
        [String] $Header
    }

    Class Form
    {
        [String] $Form
        
        Form([String]$Form)
        {
            $This.Form = @{

                Function = "Function"
                Action   = "Action"
                Section  = "Section"
                Table    = "Table"
            
            }[$Form]
        }
    }

    Class 
    {
        #   0 : |    |____|    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |____|    |____|    |____|    |____|    |____|    | 
        #   1 : |   /|/¯¯\|\___|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|___/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\   | 
        #   2 : |   \|\__/|/¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/   | 
        #   3 : |    |¯¯¯\|\__[| Pre|ss E|nter| to |Cont|inue| ]__|____|____|____|____|____|____|____|____|____|___/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/¯¯¯|    | 
        #   4 : |    |    |¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|    |¯¯¯¯|    |¯¯¯¯|    |¯¯¯¯|    |¯¯¯¯|    |    | 
        [String] $Function


            # "{0}{1}{0}{0}{0}{0}{0}{0}{0}{0}{0}{0}{0}{0}{0}{0}{0}{0}{0}{0}{1}{0}{1}{0}{1}{0}{1}{0}{1}{0}" -f "    ","____"
            # "{0}{1}{2}{3}{3}{3}{3}{3}{3}{3}{3}{3}{3}{3}{3}{3}{3}{3}{3}{4}{1}{5}{1}{5}{1}{5}{1}{5}{1}{6}" -f "   /","/¯¯\","\___","____","___/","\__/","\   "
            # "{0}{1}{2}{3}{3}{3}{3}{3}{3}{3}{3}{3}{3}{3}{3}{3}{3}{3}{3}{4}{1}{5}{1}{5}{1}{5}{1}{5}{1}{6}" -f "   \","\__/","/¯¯¯","¯¯¯¯","¯¯¯\","/¯¯\","/   "
            # "{0}{1}{2}{3}{4}{6}{5}{6}{5}{6}{5}{6}{5}{7}{0}" -f "    ","¯¯¯\","\__[",$X,$Y,"\__/","/¯¯\","/¯¯¯"
            # "{0}{0}{1}{1}{1}{1}{1}{1}{1}{1}{1}{1}{1}{1}{1}{1}{1}{1}{1}{1}{0}{1}{0}{1}{0}{1}{0}{1}{0}{0}" -f "    ","¯¯¯¯"

            @("    ","____")[@(0,1,0;@(0)*17;(1,0)*5)]                                            
            @("   /","/¯¯\","\___","____","___/","\__/","\   ")[@(0..2;@(3)*16;4,1;@(5,1)*4;6)] 
            @("   \","\__/","/¯¯¯","¯¯¯¯","¯¯¯\","/¯¯\","/   ")[@(0..2;@(3)*16;4,1;@(5,1)*4;6)]
            @("    ","¯¯¯\","\__[",$X,$Y,"\__/","/¯¯\","/¯¯¯")[@(0..4;@(6,5)*4;7,0)]
            @("    ","¯¯¯¯")[@(0,0;@(1)*17;(1,0)*5;0)]
        }

        "    ____                                                                        ____    ____    ____    ____    ____    "
        "   //¯¯\\______________________________________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\   "
        "   \\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//   "
        "    ¯¯¯\\__[________________________________________________________________]__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯¯    "
        "        ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯        "
    }

    class Action
    {
        #   0 : |    |____|    |____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|    |    | 
        #   1 : |   /|/¯¯\|\__/|/¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯\|\___|    | 
        #   2 : |   \|\__/|/¯¯¯|    |    |    |    |  St|uff |: Ha|ppen|ing |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |___/|/¯¯\|\   | 
        #   3 : |    |¯¯¯\|\___|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|___/|/¯¯\|\__/|/   | 
        #   4 : |    |    |¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|    |¯¯¯¯|    | 
    }

    Class Section
    {
        #   0 : |    |____|    |____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|    |    | 
        #   1 : |   /|/¯¯\|\__/|/¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯\|\___|    | 
        #   2 : |   \|\__/|/¯¯¯|    |    |    |    |  St|uff |: Ha|ppen|ing |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |___/|/¯¯\|\   | 
        #   3 : |   /|/¯¯\|\___|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|___/|/¯¯\|\__/|/   | 
        
        
        #   0 : |   \|\__/|/¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯\|\__/|/¯¯\|\   | [ Section 1 ]
        #   1 : |   /|/¯¯\|\__[|Cont|ent |]___|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|___/|/¯¯\|\__/|/   | [ Name of Section 1 ]
        #   2 : |   \|\__/|/¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯\|\__/|/¯¯\|\   | 
        #   3 : |   /|/¯¯\|\   |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |   /|¯¯¯\|\__/|/   | 

        #   0 : |   \|\__/|/   |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |   \|\__/|/¯¯\|\   | 
        #   1 : |   /|/¯¯\|\   |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |   /|/¯¯\|\__/|/   |
        #   0 : |   \|\__/|/   |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |   \|\__/|/¯¯\|\   | 
        #   1 : |   /|/¯¯\|\   |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |   /|/¯¯\|\__/|/   |

        #   0 : |   /|/¯¯\|\___|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|___/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\   | 
        #   1 : |   \|\__/|/¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/   | 
        #   2 : |    |¯¯¯\|\__[| Pre|ss E|nter| to |Cont|inue| ]__|____|____|____|____|____|____|____|____|____|___/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/¯¯\|\__/|/¯¯¯|    | [ Prompt ]
        #   3 : |    |    |¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|    |¯¯¯¯|    |¯¯¯¯|    |¯¯¯¯|    |¯¯¯¯|    |    | 
    }

    Class Section
    {
        [String]  $Title
        [Int32[]] $Index
        [Track[]] $Track

        Stack([String[]]$Title,[Int32[]]$Index,[Track[]]$Track)
        {
            $This.Title        = ForEach ( $I in $Index ) {  }
            $This.Index        = ForEach ( $I in $Index ) {  }
            $This.Stack        = ForEach ( $I in $Index ) {  }
        }
    }

    Class Table
    {
        [Section[]]$Table

    }

    $Type        = @{
                
        Function = "Function"
        Action   = "Action"
        Section  = "Section"
        Table    = "Table"
            
    }[ $PsCmdlet.ParameterSetName ]
    
    $Obj         = [ PSCustomObject ]@{ 

        
        Charm    = ([Range]255).Range | % { [Charm]$_ }
        Track    = ([Range]  5).Range | % { [Track]::New($_,$Array[$_]) }

    }



    # ------

        If ( $Type -match "(Action|Function)" )
        {
            
        }

        Else
        {
            
        }
    
    }


        If ( $Table )
        {
            $Keys = $Table | Select Keys

            ForEach ( $Hashtable in $Hashtables )
            {
                
            }
        }

        # ----------



    # 0    1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16   17   18   19   20   21   22   23   24   25   26   27   28   29   30
    # 0    4    8   12   16   20   24   28   32   36   40   44   48   52   56   60   64   68   72   76   80   84   88   92   96  100   104 108  112  116  120
    # |    |____|    |____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|    |    "
    # |   /|/¯¯\|\__/|/¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯\|\___|    "
    # |   \|\__/|/¯¯¯|   _|__[ |Tabl|e of| Con|tent|s ] |____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|_   |___/|/¯¯\|\   "
    # |    |¯¯¯\|\___|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|___/|/¯¯\|\__/|/   "
    # |    |    |¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|¯¯¯¯|    |¯¯¯¯|    "
    # |    |____|    |____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|____|    |    "

    $Sample  = "    ____    ____________________________________________________________________________________________________        ",
               "   //¯¯\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\___    ",
               "   \\__//¯¯¯   ___[ Content... For all tablekind. ( A normal, yet dramatic, table of content...) ]_______   ___//¯¯\\   ",
               "    ¯¯¯\\__________________________________________________________________________________________________//¯¯\\__//   ",
               "        ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯    ¯¯¯¯    "

    $Test   = @{ 
               
        Example1 = @{
        
            Item1_1 = "Value1_1"
            Item1_2 = "Value1_2"
            Item1_3 = "Value1_3"
        }

        Example2 = @{
        
            Item2_1 = "Value2_1"
            Item2_2 = "Value2_2"
            Item2_3 = "Value2_3"
        }

        Example3 = @{
        
            Item3_1 = "Value3_1"
            Item3_2 = "Value3_2"
            Item3_3 = "Value3_3"
        }
    }

    Function Convert-HashToArray
    {
        [ CmdLetBinding () ] Param ( 
        
            [ Parameter ( Mandatory ) ] [ Hashtable ] $Table )

        $Table.GetEnumerator()                             | % { 
        
            If ( $_.Value.GetType().Name -eq "Hashtable" )
            {
                "<$( $_.Name )>"

                $Table.$( $_.Name ).GetEnumerator() | % { $_.Name , $_.Value -join '=' }

                ""
            }

            Else
            {
                $_.Name , $_.Value -join '=' 
            }
        }

        ""
    }



$Table = @{ Stuff = "Happening" ; More = @{ Stuff = "NestedHappening" } }

Convert-HashToArray @{ Stuff = "Happening" ; More = @{ Stuff = "NestedHappening" } }
